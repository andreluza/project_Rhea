
    model {
    

    ###################################
    ###### SPATIAL MODEL  #############
    ###################################

    # CAR prior - spatial random effect

    for(j in 1:sumNeigh){ # rm isso para o modelo sem espaco
       weights[j] <- 1
    }

    # rm isso para o modelo sem espaco
    spacesigma ~ dunif(0,5)
    spacetau <- 1/(spacesigma*spacesigma)
    SPACE [1:nCell] ~ car.normal(adj[],weights[],num[],spacetau)
    
    ###################################
    ###### ECOLOGICAL MODEL ###########
    ###################################

    # PRIORS
    BETA0 ~ dunif(-10,10)
    #BETA.BOVINO ~ dunif(-10, 10)
    #BETA.OVELHA ~ dunif(-10, 10)
    #BETA.LAVOURA ~ dunif(-10, 10)
    BETA.CAMPO ~ dunif(-10, 10)
    #BETA.FLORESTA ~ dunif(-10, 10)

    # LIKELIHOOD
    for (i in 1:nsite) {

      z[i] ~ dbern(psi[i]) # True occupancy z at site i
  
     mu[i] <- BETA0 + #BETA.BOVINO * bovino[i] + 
                      #BETA.OVELHA * ovelha[i]+ 
                      #BETA.LAVOURA * lavoura[i]+ 
                      BETA.CAMPO * campo[i] +
                      #BETA.FLORESTA * floresta[i] +
                      SPACE [cell.id[i]] # # rm isso para o modelo sem espaco

     mu.lim[i] <- min(10, max(-10, mu[i]))  
     logit(psi[i]) <- mu.lim[i]

    }    

    ###################################
    ###### OBSERVATION MODELS #########
    ###################################

    ### GBIF 
    
    for (i in 1:nsite) {

        e1[i] <- ALPHA.GBIF * nSP.gbif[i]
        P1[i] <- 1-pow((1-0.5), e1[i])
        zP1[i] <- P1[i] * z [i]
        y.gbif [i] ~ dbern(zP1[i])


    }

    # PRIOR FOR RICHNESS EFFECT
    ALPHA.GBIF ~ dnorm(0,0.0001)I(0,1000)# truncated in positive values
    
    
    ## EBIRD
  
    for (i in 1:nsite) {
      for (j in 1:nrepEB) {

        e2[i,j] <- ALPHA.DIST * dist[i,j] +
                   ALPHA.DURATION * duration[i,j] +
                   ALPHA.OBSERVER * observer[i,j]
 
        P2[i,j] <- 1-pow((1-0.5), e2[i,j])
        zP2[i,j] <- P2[i,j] * z [i]
        yEB [i,j] ~ dbern(zP2[i,j])

      }
    }
    
    ALPHA.DIST ~ dnorm(0,0.0001)I(0,1000)
    ALPHA.DURATION ~ dnorm(0,0.0001)I(0,2000)
    ALPHA.OBSERVER  ~ dnorm(0,0.0001)I(0,1000)

    ### INAT
    
    for (i in 1:nsite) {
    
        e3[i] <- ALPHA.INAT * nSP.inat[i]
        P3[i] <- 1-pow((1-0.5), e3[i])
        zP3[i] <- P3[i] * z [i]
        y.inat [i] ~ dbern (zP3[i])
    
    
    }
    
    # PRIOR FOR RICHNESS EFFECT
    ALPHA.INAT ~ dnorm(0,0.0001)I(0,1000)# truncated in positive values
    
    ### VERTNET
    
    for (i in 1:nsite) {
    
        e4[i] <- ALPHA.INAT * nSP.vertnet[i]
        P4[i] <- 1-pow((1-0.5), e4[i])
        zP4[i] <- P4[i] * z [i]
        y.vertnet [i] ~ dbern(zP4[i])
    
    
    }
    
    # PRIOR FOR RICHNESS EFFECT
    ALPHA.VERTNET ~ dnorm(0,0.0001)I(0,1000)# truncated in positive values
    
    ### WIKIAVES
    
    for (i in 1:nsite) {
    
        e5[i] <- ALPHA.PICT * nPIC.wikiaves[i]+ALPHA.SONG*nSONG.wikiaves[i]
        P5[i] <- 1-pow((1-0.5), e5[i])
        zP5[i] <- P5[i] * z [i]
        
        y.wikiaves[i] ~ dbern(zP5[i])#+(1-zP5[i])*q[i])
        
    }
    
    # PRIOR FOR RICHNESS EFFECT
    ALPHA.PICT ~ dnorm(0,0.0001)I(0,30000)# truncated in positive values
    ALPHA.SONG ~ dnorm(0,0.0001)I(0,10000)# truncated in positive values
  
    ##############################
    #### GOODNESS-OF-FIT #########
    ##############################
    
    ## not implemented yet
        
    ##############################
    #### DERIVED PARAMETERS ######
    ##############################
    
    #compute the mean detection probability of each dataset: 
    muP1 <- mean(P1[])
    muP2 <- mean(P2[,])
    muP3 <- mean(P3[])
    muP4 <- mean(P4[])
    muP5 <- mean(P5[])

    ## Number of occupied municipalities (finite sample size)
    fs.z <- sum(z[])/nsite
    

    }## end of the model
    
